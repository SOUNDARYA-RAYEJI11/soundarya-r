<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>2048 Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background: #faf8ef;
      margin: 0;
    }
    h1 {
      margin: 20px 0;
    }
    #game-board {
      display: grid;
      grid-template-columns: repeat(4, 100px);
      grid-gap: 10px;
      justify-content: center;
      margin: 20px auto;
      width: max-content;
      background: #bbada0;
      padding: 10px;
      border-radius: 10px;
    }
    .tile {
      width: 100px;
      height: 100px;
      background: #cdc1b4;
      font-size: 36px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: 5px;
      color: #776e65;
      font-weight: bold;
    }
    .tile-2    { background: #eee4da; }
    .tile-4    { background: #ede0c8; }
    .tile-8    { background: #f2b179; color: #f9f6f2; }
    .tile-16   { background: #f59563; color: #f9f6f2; }
    .tile-32   { background: #f67c5f; color: #f9f6f2; }
    .tile-64   { background: #f65e3b; color: #f9f6f2; }
    .tile-128  { background: #edcf72; color: #f9f6f2; }
    .tile-256  { background: #edcc61; color: #f9f6f2; }
    .tile-512  { background: #edc850; color: #f9f6f2; }
    .tile-1024 { background: #edc53f; color: #f9f6f2; }
    .tile-2048 { background: #edc22e; color: #f9f6f2; }
  </style>
</head>
<body>
  <h1>2048 Game</h1>
  <div id="game-board"></div>
  <script>
    const board = [];
    const size = 4;
    const gameBoard = document.getElementById('game-board');

    function initBoard() {
      for (let i = 0; i < size; i++) {
        board[i] = [];
        for (let j = 0; j < size; j++) {
          board[i][j] = 0;
        }
      }
      addRandomTile();
      addRandomTile();
      updateBoard();
    }

    function addRandomTile() {
      const empty = [];
      for (let i = 0; i < size; i++) {
        for (let j = 0; j < size; j++) {
          if (board[i][j] === 0) empty.push({ i, j });
        }
      }
      if (empty.length === 0) return;
      const { i, j } = empty[Math.floor(Math.random() * empty.length)];
      board[i][j] = Math.random() < 0.9 ? 2 : 4;
    }

    function updateBoard() {
      gameBoard.innerHTML = '';
      for (let i = 0; i < size; i++) {
        for (let j = 0; j < size; j++) {
          const tile = document.createElement('div');
          tile.className = 'tile';
          const val = board[i][j];
          if (val) {
            tile.classList.add('tile-' + val);
            tile.textContent = val;
          }
          gameBoard.appendChild(tile);
        }
      }
    }

    function rotateLeft(matrix) {
      const result = matrix.map((row, i) =>
        row.map((_, j) => matrix[j][size - 1 - i])
      );
      return result;
    }

    function moveLeft(row) {
      let arr = row.filter(val => val);
      for (let i = 0; i < arr.length - 1; i++) {
        if (arr[i] === arr[i + 1]) {
          arr[i] *= 2;
          arr[i + 1] = 0;
        }
      }
      return arr.filter(val => val).concat(Array(size - arr.filter(val => val).length).fill(0));
    }

    function move(dir) {
      let rotated = board;
      for (let i = 0; i < dir; i++) {
        rotated = rotateLeft(rotated);
      }

      let moved = false;
      for (let i = 0; i < size; i++) {
        const newRow = moveLeft(rotated[i]);
        if (JSON.stringify(rotated[i]) !== JSON.stringify(newRow)) {
          moved = true;
          rotated[i] = newRow;
        }
      }

      for (let i = 0; i < (4 - dir) % 4; i++) {
        rotated = rotateLeft(rotated);
      }

      for (let i = 0; i
